source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
matrix()
a=matrix()
a
a[1,1]
a[1,2]=1
matrix(nrow = 2)
a=matrix(nrow = 2)
cbind(a,c(1,2))
a=cbind(c(1,2))
a
clear()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
a
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
a
source('~/.active-rstudio-document', echo=TRUE)
a
a <- a[,-1]
a
ave_prob <- mean(probs)
source('~/Desktop/math381/hw5.R', echo=TRUE)
ave_prob
mean(probs)
target + tolerance
while(!(ave_prob < target + tolerance && ave_prob > target - tolerance)) {
needle_length <- needle_length + needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
ave_prob <- mean(probs)
}
source('~/Desktop/math381/hw5.R', echo=TRUE)
source('~/Desktop/math381/hw5.R', echo=TRUE)
source('~/Desktop/math381/hw5.R', echo=TRUE)
ave_prob
tolerance <- 0.0001
while(!(ave_prob < target + tolerance && ave_prob > target - tolerance)) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
ave_prob <- mean(probs)
ave_prob
}
ave_prob
while(!(ave_prob < target + tolerance)) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
ave_prob <- mean(probs)
}
ave_prob
while(!(ave_prob < target + tolerance)) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
ave_prob <- mean(probs)
}
source('~/Desktop/math381/hw5.R', echo=TRUE)
ave_prob
needle_length
source('~/Desktop/math381/hw5.R', echo=TRUE)
aves <- c(ave_prob)
needle_change <- 0.1
tolerance <- 0.0001
average <- ave_prob
target <- 0.5
runs <- 10
while(!(aves[length(aves)] < target + tolerance)) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
aves <- c(aves,mean(probs))
}
needle_length
aves
aves <- ave_prob
needle_change <- 0.1
tolerance <- 0.0001
average <- ave_prob
target <- 0.5
runs <- 10
while(!(aves[length(aves)] < target + tolerance)) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
aves <- c(aves,mean(probs))
}
tries <- 100000
fail <- 0
needle_length <- 1
runs <- 10
f <- function(x) {
-2+4/3*x
}
throw <- function() {
fail <- 0
hists <- c()
for (i in 1:tries){
x <- runif(1,0,3)
y <- runif(1,0,2)
theta <- runif(1,0,2*pi)
xx <- x+cos(theta) * needle_length
yy <- y+sin(theta) * needle_length
if(xx>3 || xx <0 || yy>2 || yy<0) {
fail <- fail + 1
}else{
if((f(x)<y&&f(xx)>yy) || (f(x)>y&&f(xx)<yy)){
fail <- fail + 1
}
}
if(i%%1000==0) {
hists[i/1000] = fail/i
}
}
hists
}
hists <- throw()
probs <- hists[length(hists)]
#plot(hists,type = 'l')
for(j in 2:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
#lines(1:(tries/1000),hists)
}
ave_prob <- mean(probs)
CI <- c(ave_prob-2*sd(probs),ave_prob+2*sd(probs))
CI
aves <- ave_prob
needle_change <- 0.1
tolerance <- 0.0001
average <- ave_prob
target <- 0.5
runs <- 10
while(!(aves[length(aves)] < target + tolerance)) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
aves <- c(aves,mean(probs))
}
needle_length
aves
needle_change <- 0.1
tolerance <- 0.0001
average <- ave_prob
target <- 0.5
runs <- 10
while(!(average < target + tolerance)) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
aves <- c(aves,mean(probs))
}
needle_length
aves
source('~/Desktop/math381/hw5.R', echo=TRUE)
needle_change <- 0.01
average <- ave_prob
target <- 0.5
runs <- 10
while(average < target) {
needle_length <- needle_length + needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
aves <- c(aves,mean(probs))
}
needle_length
source('~/Desktop/math381/hw5.R', echo=TRUE)
source('~/Desktop/math381/hw5.R', echo=TRUE)
while(average < target) {
needle_length <- needle_length + needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
}
needle_length
while(average < target) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
}
aves <- ave_prob
needle_change <- 0.1
average <- ave_prob
target <- 0.5
runs <- 10
while(average > target) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
}
needle_length <- needle_length + needle_change
needle_change <- 0.01
needle_length
source('~/Desktop/math381/hw5.R', echo=TRUE)
average
source('~/Desktop/math381/hw5.R', echo=TRUE)
average
source('~/Desktop/math381/hw5.R', echo=TRUE)
source('~/Desktop/math381/hw5.R', echo=TRUE)
source('~/Desktop/math381/hw5.R', echo=TRUE)
aves
ave_prob
aves <- 1:10
for(i in 1:10) {
needle_change <- 0.1
average <- ave_prob
target <- 0.5
runs <- 10
while(average > target) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
}
needle_change <- 0.01
while(average < target) {
needle_length <- needle_length + needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
}
needle_length
aves[i] <- needle_length
}
ave()
aves
needle_change <- 0.1
average <- ave_prob
target <- 0.5
runs <- 10
while(average > target) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
}
source('~/Desktop/math381/hw5.R', echo=TRUE)
tries <- 100000
fail <- 0
needle_length <- 1
runs <- 10
f <- function(x) {
-2+4/3*x
}
throw <- function() {
fail <- 0
hists <- c()
for (i in 1:tries){
x <- runif(1,0,3)
y <- runif(1,0,2)
theta <- runif(1,0,2*pi)
xx <- x+cos(theta) * needle_length
yy <- y+sin(theta) * needle_length
if(xx>3 || xx <0 || yy>2 || yy<0) {
fail <- fail + 1
}else{
if((f(x)<y&&f(xx)>yy) || (f(x)>y&&f(xx)<yy)){
fail <- fail + 1
}
}
if(i%%1000==0) {
hists[i/1000] = fail/i
}
}
hists
}
hists <- throw()
probs <- hists[length(hists)]
#plot(hists,type = 'l')
for(j in 2:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
#lines(1:(tries/1000),hists)
}
ave_prob <- mean(probs)
CI <- c(ave_prob-2*sd(probs),ave_prob+2*sd(probs))
CI
aves <- 1:10
needle_change <- 0.1
average <- ave_prob
target <- 0.5
runs <- 10
while(average > target) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
}
needle_length
needle_change <- 0.01
while(average < target) {
needle_length <- needle_length + needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
}
needle_length
source('~/Desktop/math381/hw5.R', echo=TRUE)
aves
average
source('~/Desktop/math381/hw5.R', echo=TRUE)
probs
tries <- 100000
fail <- 0
needle_length <- 1
runs <- 10
f <- function(x) {
-2+4/3*x
}
throw <- function() {
fail <- 0
hists <- c()
for (i in 1:tries){
x <- runif(1,0,3)
y <- runif(1,0,2)
theta <- runif(1,0,2*pi)
xx <- x+cos(theta) * needle_length
yy <- y+sin(theta) * needle_length
if(xx>3 || xx <0 || yy>2 || yy<0) {
fail <- fail + 1
}else{
if((f(x)<y&&f(xx)>yy) || (f(x)>y&&f(xx)<yy)){
fail <- fail + 1
}
}
if(i%%1000==0) {
hists[i/1000] = fail/i
}
}
hists
}
hists <- throw()
probs <- hists[length(hists)]
#plot(hists,type = 'l')
for(j in 2:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
#lines(1:(tries/1000),hists)
}
ave_prob <- mean(probs)
CI <- c(ave_prob-2*sd(probs),ave_prob+2*sd(probs))
CI
aves <- ave_prob
needle_change <- 0.1
average <- ave_prob
target <- 0.5
runs <- 10
while(average > target) {
needle_length <- needle_length - needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
aves <- c(aves, average)
}
aves
needle_change <- 0.01
while(average < target) {
needle_length <- needle_length + needle_change
hists <- throw()
probs <- hists[length(hists)]
for(i in 1:runs) {
hists <- throw()
probs <- c(probs,hists[length(hists)])
}
average <- mean(probs)
aves <- c(aves, average)
}
needle_length
aves
source('~/Desktop/math381/hw5.R', echo=TRUE)
plot(aves)
source('~/Desktop/math381/hw5.R', echo=TRUE)
plot(needles, aves)
install.packages('leaps')
library('leaps')
install.packages('glmnet')
library('glmnet')
setwd("~/Desktop/sp20/stat435/hw3")
source('~/Desktop/sp20/stat435/hw3/hw3.R', echo=TRUE)
install.packages('glmnet')
install.packages('glmnet')
install.packages('glmnet')
source('~/Desktop/sp20/stat435/hw3/hw3.R', echo=TRUE)
install.packages('leaps')
source('~/Desktop/sp20/stat435/hw3/hw3.R', echo=TRUE)
k <- which(GCV==min(GCV[1:30]))
fit.values <- regsubsets.fitted.values(truncated,regsubsets.out,k)
plot(x,y)
lines(x,fit.values)
source('~/Desktop/sp20/stat435/hw3/hw3.R', echo=TRUE)
k <- which(GCV==min(GCV[1:30]))
fit.values <- regsubsets.fitted.values(truncated,regsubsets.out,k)
plot(x,y)
lines(x,fit.values,main='forward')
regsubsets.out <- regsubsets(truncated,y,method="backward",nvmax=100,intercept = FALSE)
fit.values <- regsubsets.fitted.values(truncated,regsubsets.out,k)
plot(x,y)
lines(x,fit.values,main='backward')
source('~/Desktop/sp20/stat435/hw3/hw3.R', echo=TRUE)
library('glmnet')
lambda <-  c(0,1,10,1000000)
ridge.mod <- glmnet(truncated,y,alpha=0,lambda = c(0,1,10,1000000))
coeff <- coef(ridge.mod)
coeff[101,]=coeff[1,]
for (i in 1:4) {
plot(x,y,main = paste0("lambda=",lambda))
lines(x,truncated%*%coeff[,i][2:101])
}
library('glmnet')
lambda <-  c(0,1,10,1000000)
ridge.mod <- glmnet(truncated,y,alpha=0,lambda = c(0,1,10,1000000))
coeff <- coef(ridge.mod)
coeff[101,]=coeff[1,]
for (i in 1:4) {
plot(x,y,main = paste0("lambda=",lambda))
lines(x,truncated%*%coeff[,i][2:101])
}
library('glmnet')
lambda <-  c(0,1,10,1000000)
ridge.mod <- glmnet(truncated,y,alpha=0,lambda = c(0,1,10,1000000))
coeff <- coef(ridge.mod)
coeff[101,]=coeff[1,]
for (i in 1:4) {
plot(x,y,main = paste0("lambda=",lambda[i]))
lines(x,truncated%*%coeff[,i][2:101])
}
GCV <- rep(0,100)
for(i in 1:100) {
fit.values <- regsubsets.fitted.values(truncated,regsubsets.out,i)
GCV[i] <- mean((y-fit.values)^2/(1-3*i/100)^2)
}
plot(GCV,type='l')
