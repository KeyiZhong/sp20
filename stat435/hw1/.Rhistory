)
)
plot(Wage.train$wage, Wage.train$age)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
x <- trained$x
y <- trained$y
lines(trained)
sum <- 0
for(i in 1:length(x)) {
sum <- sum + (Wage.train$age[order(Wage.train$age)][i]-y[i])^2
if(is.na(sum)){
print(i)
}
}
sum
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage,test.predict)
test.predict <- ksmooth.predict(train.out, Wage.test$wage)
## D
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage,test.predict)
test.predict
## B
ksmooth.predict <- function(ksmooth.train.out, x.query) {
x <- x.query[order(x.query)]
y.predict <- rep(0,length(x.query))
y.predict <- approxfun(ksmooth.train.out,rule = 2)(x.query)
return(y.predict)
}
## D
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage,test.predict)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
test.predict
plot(Wage.test$wage,Wage.test$age)
lines(ksmooth(Wage.train$wage, Wage.train$age,'normal',3))
sum <- 0
for(i in Wage.test$wage) {
sum <- sum + (Wage.test$age[order(Wage.test$age)][i]-test.predict$y[i])^2
if(is.na(sum)){
print(i)
}
}
sum <- 0
for(i in Wage.test$wage) {
sum <- sum + (Wage.test$age[order(Wage.test$age)][i]-test.predict[i])^2
if(is.na(sum)){
print(i)
}
}
sum
plot(Wage.train$wage, Wage.train$age)
lines(ksmooth.train(Wage.train$wage,Wage.train$age,'box'))
plot(Wage.train$wage, Wage.train$age)
source('home1-part1-data.R')
## A
ksmooth.train <- function(x.train, y.train, kernel = c("box", "normal"),bandwidth = 0.5, CV = FALSE){
ord <- order(x.train)
x <- x.train[ord]
y <- y.train[ord]
if(kernel == 'box') {
yhat.train <- rep(0,length(x))
for (i in 1:length(x)) {
if(CV) {
yhat <- mean(y[-i][abs(x[i]-x[-i])<=bandwidth])
}else {
yhat <- mean(y[abs(x[i]-x)<=bandwidth])
}
yhat.train[i] <- yhat
}
return(list(x=x,y=yhat.train))
}else {
yhat.train <- rep(0,length(x))
gaussian_sd <- -bandwidth/4/qnorm(0.25)
for (i in 1:length(x)) {
if(CV) {
gaussian_sum <- sum(dnorm(x[i]-x[-i], 0, gaussian_sd))
yhat <- sum(y[-i]*dnorm(x[i]-x[-i]))/gaussian_sum
}else {
gaussian_sum <- sum(dnorm(x[i]-x, 0, gaussian_sd))
yhat <- sum(y*dnorm(x[i]-x))/gaussian_sum
}
yhat.train[i] <- yhat
}
return(list(x=x,y=yhat.train))
}
}
plot(Wage.train$wage, Wage.train$age)
lines(ksmooth.train(Wage.train$wage,Wage.train$age,'box'))
lines(ksmooth.train(Wage.train$wage,Wage.train$age,'normal'))
0.5/4/qnorm(0.25)
source('C:/Users/Keyi/Desktop/sp20/stat435/hw1/hw1.R', echo=TRUE)
plot(Wage.train$wage, Wage.train$age)
lines(ksmooth.train(Wage.train$wage,Wage.train$age,'normal'))
lines(ksmooth.train(Wage.train$wage,Wage.train$age,'box'),col='red')
## B
ksmooth.predict <- function(ksmooth.train.out, x.query) {
x <- x.query[order(x.query)]
y.predict <- rep(0,length(x.query))
y.predict <- approxfun(ksmooth.train.out,rule = 2)(x.query)
return(y.predict)
}
## C
## use ksmooth fun
plot(Wage.train$wage, Wage.train$age)
lines(ksmooth(Wage.train$wage, Wage.train$age,'normal',3))
x <- ksmooth(Wage.train$wage, Wage.train$age,'normal',3)$x
y <- ksmooth(Wage.train$wage, Wage.train$age,'normal',3)$y
sum <- 0
for(i in 1:length(x)) {
sum <- sum + (Wage.train$age[i]-y[x=Wage.train$wage[i]])^2
}
sum
## use my function
plot(Wage.train$wage, Wage.train$age)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
x <- trained$x
y <- trained$y
lines(trained)
sum <- 0
for(i in 1:length(x)) {
sum <- sum + (Wage.train$age[order(Wage.train$age)][i]-y[i])^2
if(is.na(sum)){
print(i)
}
}
sum
## E
ESE <- rep(0,10)
for(i in 1:10) {
ESE[i] <- mean((Wage.train$age-ksmooth.train(Wage.train$wage,Wage.train$age,bandwidth = i))^2)
}
## E
ESE <- rep(0,10)
for(i in 1:10) {
ESE[i] <- mean((Wage.train$age-ksmooth.train(Wage.train$wage,Wage.train$age,'box',i))^2)
}
for(i in 1:10) {
ESE[i] <- mean((Wage.train$age-ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y)^2)
}
ESE
plot(ESE)
## E
ESE <- rep(0,10)
for(i in 1:10) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE)
plot(ESE,'l')
plot(ESE,type = 'l')
plot(ESE,type = 'ol')
plot(ESE,type = 'c')
plot(ESE,type = 'b')
ESE
## E
ESE <- rep(0,10)
for(i in 0.1:0.1:1) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
for(i in 1:3) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
i=1
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
ESE
## E
ESE <- rep(0,10)
for(i in 1:3) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
## E
ESE <- rep(0,10)
for(i in 0.1:0.1:1) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
i
0.1:0.1:1
0.1:1:0.1
0.1:1:10
0.1:0.1:10
0.1:0.2:10
0.1:10
0.1:1
0.1:1 by 1
for(i in seq(0.1,1,0.1)) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
for(i in seq(0.1,1, by=0.1)) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
## E
ESE <- rep(0,10)
for(i in seq(0.1,1, by=0.1)) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
seq(0.1,1,by=0.1)
for(i in 1:10) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i*0.1)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
## E
ESE <- rep(0,10)
for(i in 1:10) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
## E
ESE <- rep(0,10)
for(i in 1:10) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- sum((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
## E
ESE <- rep(0,10)
for(i in 1:10) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
plot(Wage.test$wage,Wage.test$age)
lines(ksmooth.train((Wage.train$wage,Wage.train$age,'normal')),Wage.test$wage[order(Wage.test$wage)])
lines(ksmooth.train((Wage.train$wage,Wage.train$age,'normal')))
lines(ksmooth.predict(ksmooth.train((Wage.train$wage, Wage.train$age,'normal')),Wage.test$wage[order(Wage.test$wage)]))
lines(ksmooth.predict(ksmooth.train((Wage.train$wage,Wage.train$age,'normal')),Wage.test$wage[order(Wage.test$wage)]))
## D
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
## D
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage[order(Wage.test$wage)])
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage[order(Wage.test$wage)])
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal')
test.predict <- ksmooth.predict(trained, Wage.test$wage[order(Wage.test$wage)])
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal')
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal')
test.predict <- ksmooth.predict(trained, Wage.test$wage[order(Wage.test$wage)])
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
## D
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
## D
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage[order(Wage.test$wage)])
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
## B
ksmooth.predict <- function(ksmooth.train.out, x.query) {
x <- x.query[order(x.query)]
y.predict <- approxfun(ksmooth.train.out,rule = 2)(x)
return(y.predict)
}
## D
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage[order(Wage.test$wage)])
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
## D
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
sum <- 0
for(i in Wage.test$wage) {
sum <- sum + (Wage.test$age[order(Wage.test$age)][i]-test.predict[i])^2
if(is.na(sum)){
print(i)
}
}
sum
## E
ESE <- rep(0,10)
for(i in 1:10) {
yhat <- ksmooth.train(Wage.train$wage,Wage.train$age,'box',i)$y
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
## F
ESE <- rep(0,10)
for(i in 1:10) {
fhat <- ksmooth.predict(ksmooth.train(Wage.train$wage,Wage.train$age,'box',i), Wage.test$wage)
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-yhat)^2)
}
plot(ESE,type = 'b')
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',10)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',10)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'box',10)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',10)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'box',10)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'box',1)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
## F
ESE <- rep(0,10)
for(i in 1:10) {
fhat <- ksmooth.predict(ksmooth.train(Wage.train$wage,Wage.train$age,'box',i), Wage.test$wage)
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-fhat)^2)
}
plot(ESE,type = 'b')
## F
ESE <- rep(0,10)
for(i in 1:10) {
fhat <- ksmooth.predict(ksmooth.train(Wage.train$wage,Wage.train$age,'box',i,TRUE), Wage.test$wage)
ESE[i] <- mean((Wage.train$age[order(Wage.train$wage)]-fhat)^2)
}
plot(ESE,type = 'b')
## G
ESE <- rep(0,10)
for(i in 1:10) {
fhat <- ksmooth.predict(ksmooth.train(Wage.train$wage,Wage.train$age,'box',i,TRUE), Wage.test$wage)
ESE[i] <- mean((Wage.test$age[order(Wage.test$wage)]-fhat)^2)
}
plot(ESE,type = 'b')
## G
ESE <- rep(0,10)
for(i in 1:10) {
fhat <- ksmooth.predict(ksmooth.train(Wage.train$wage,Wage.train$age,'box',i), Wage.test$wage)
ESE[i] <- mean((Wage.test$age[order(Wage.test$wage)]-fhat)^2)
}
plot(ESE,type = 'b')
## G
ESE <- rep(0,100)
for(i in 1:100) {
fhat <- ksmooth.predict(ksmooth.train(Wage.train$wage,Wage.train$age,'box',i), Wage.test$wage)
ESE[i] <- mean((Wage.test$age[order(Wage.test$wage)]-fhat)^2)
}
plot(ESE,type = 'b')
View(Wage.test)
fold
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal')
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal')
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict,col='red')
for(i in 1:100) {
fhat <- ksmooth.predict(ksmooth.train(Wage.train$wage,Wage.train$age,'box',i), Wage.test$wage)
ESE[i] <- mean((Wage.test$age[order(Wage.test$wage)]-fhat)^2)
}
max(Wage.train$wage)
max(Wage.test$wage)
fold
sum(fold)
plot(Wage.train$wage, Wage.train$age)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
x <- trained$x
y <- trained$y
lines(trained)
sum <- 0
for(i in 1:length(x)) {
sum <- sum + (Wage.train$age[order(Wage.train$age)][i]-y[i])^2
if(is.na(sum)){
print(i)
}
}
sum
plot(Wage.train$wage, Wage.train$age)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
x <- trained$x
y <- trained$y
lines(trained)
sum <- 0
for(i in 1:length(x)) {
sum <- sum + (Wage.train$age[order(Wage.train$age)][i]-y[i])^2
if(is.na(sum)){
print(i)
}
}
sum
for(i in 1:length(x)) {
sum <- sum + (Wage.train$age[order(Wage.train$wage)][i]-y[i])^2
}
sum
plot(Wage.train$wage, Wage.train$age)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
x <- trained$x
y <- trained$y
lines(trained)
sum <- 0
for(i in 1:length(x)) {
sum <- sum + (Wage.train$age[order(Wage.train$wage)][i]-y[i])^2
}
sum
Wage.full <- cbind(Wage.test,Wage.train)
Wage.full <- rbind(Wage.test,Wage.train)
source('C:/Users/Keyi/Desktop/sp20/stat435/hw1/hw1.R', echo=TRUE)
source('home1-part2-data.R')
source('home1-part2-data.R')
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
sum <- 0
for(i in Wage.test$wage) {
sum <- sum + (Wage.test$age[order(Wage.test$wage)][i]-test.predict[i])^2
}
sum
source('C:/Users/Keyi/Desktop/sp20/stat435/hw1/hw1.R', echo=TRUE)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
sum <- 0
for(i in Wage.test$wage) {
sum <- sum + (Wage.test$age[order(Wage.test$wage)][i]-test.predict[i])^2
}
sum
plot(Wage.train$wage, Wage.train$age)
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
x <- trained$x
y <- trained$y
lines(trained)
sum <- 0
for(i in 1:length(x)) {
sum <- sum + (Wage.train$age[order(Wage.train$wage)][i]-y[i])^2
}
sum
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
sum <- 0
for(i in Wage.test$wage) {
sum <- sum + (Wage.test$age[order(Wage.test$wage)][i]-test.predict[i])^2
}
sum
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
sum <- 0
for(i in length(Wage.test$wage)) {
sum <- sum + (Wage.test$age[order(Wage.test$wage)][i]-test.predict[i])^2
}
sum
trained <- ksmooth.train(Wage.train$wage, Wage.train$age,'normal',3)
test.predict <- ksmooth.predict(trained, Wage.test$wage)
plot(Wage.test$wage,Wage.test$age)
lines(Wage.test$wage[order(Wage.test$wage)] ,test.predict)
sum <- 0
for(i in 1:length(Wage.test$wage)) {
sum <- sum + (Wage.test$age[order(Wage.test$wage)][i]-test.predict[i])^2
}
sum
